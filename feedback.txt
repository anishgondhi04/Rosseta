GRADE:  NOT YET GRADED  

Assignment 4 Feedback:

Total Grade:   / 50

General Comments:


Functionality:   / 20
   Based on the tests form gitlab.

Problem 1 Solution Quality:   / 15
    See rubric below.

Problem 2 Solution Quality:   / 5
    See rubric below.

Comments:


Code Clarity:       / 10
    See rubric below.

Comments: 



===========================================================
RUBRICS

Solution Quality Problem 1
--------------------------
  (15/15) Excellent Solutions
  - Implementation is correct.
  - All tests pass.
  - Code is robust (error checking is done).

  (12/15) Good Solution
  - Implementation is correct
  - All tests (00 - 04) or nearly all tests pass
  - Little or no error checking is done.  Code is not robust.

  (9/15) Marginal Solution
  - Minor issues
  - Some tests pass, or would with a minor fix

  (6/15) Poor Solution
  - Major flaws in implementation
  - No tests pass and none would with some minor corrections

  (3/15) Very Poor Solution
  - Attempt has been made


Solution Quality Problem 2
--------------------------
  (5/5) Excellent Solutions
  - Implementation is correct.
  - All tests pass.
  - Code is robust (error checking is done).

  (4/5) Good Solution
  - Implementation is correct
  - All tests (05 - 10) or nearly all tests pass
  - Little or no error checking is done.  Code is not robust.

  (3/5) Marginal Solution
  - Minor issues
  - Some tests pass (05 - 10), or would with a minor fix

  (2/5) Poor Solution
  - Major flaws in implementation
  - No tests pass and none would with some minor corrections

  (1/5) Very Poor Solution
  - Attempt has been made


-----------------------------------------------------------
Code Clarity
-------------
  (10/10) Professional looking code should be:
  - well commented
  - follows style guidelines
  - consistent formatting
  - is easy to read
  - does not have any function definitions in header files 
    (prototype declarations are ok)

  (8/10) Code looks good if:
  - some comments
  - follows style guidelines
  - consistent formatting
  - is easy to read
  - does not have any function definitions in header files 

  (6/10) Code is mostly readable if
  - somewhat follows style guidelines
  - mostly consistent formatting
  - does not have any function definitions in header files 
  - marker is having difficulty understanding your code

  (4/10) Code is hard to read if
  - follows a few of the guidelines
  - somewhat consistent formatting
  - has function definitions in header files 
  - marker can barely understand your code

  (2/10) Code is illegible
  - code cannot be understood
